package iomapper;

@AuditEntity("${clazz.name}")
@Entity
@Table(name = "${clazz.tableName}")
#if($clazz.isBase)@Inheritance(strategy = InheritanceType.JOINED)
#end
#if($clazz.extends)@PrimaryKeyJoinColumn(name = "id${clazz.extends}")
#end
public#if($clazz.isAbstract) abstract#end class $clazz.name extends #if($clazz.extends)$clazz.extends#elseVersionedAuditEntity#end {

    #foreach($attribute in $clazz.attributes)
    private $attribute.clazz $attribute.name;
    #end

    protected ${clazz.name}() {}
    
    #foreach($attribute in $clazz.attributes)
    @ManyToOne(fetch = FetchType.LAZY)
    @Cascade({})
    @JoinColumn(name = "id${attribute.clazz}")
    @AuditProperty(value = "${attribute.name}", auditStringFactoryClass = AuditEntityStringFactory.class)
    public $attribute.clazz get${attribute.clazz}() { return this.$attribute.name; }

    public void set${attribute.clazz}($attribute.clazz $attribute.name) { this.$attribute.name = $attribute.name; }
    #end

}